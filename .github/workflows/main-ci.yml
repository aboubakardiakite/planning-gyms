name: Main CI/CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from package.json
      id: package-version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/workout-planner:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/workout-planner:${{ steps.package-version.outputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/workout-planner:${{ github.sha }}

    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.OVH_SSH_KEY }}
        port: 22
        script: |
          # Créer le dossier et le fichier docker-compose.yml
          mkdir -p ~/workout-planner
          cat > ~/workout-planner/docker-compose.yml << 'EOL'
          version: '3.8'
          
          services:
            api:
              image: ${DOCKERHUB_USERNAME}/workout-planner:latest
              container_name: workout-planner-api
              restart: always
              ports:
                - "3000:3000"
              environment:
                - NODE_ENV=production
                - PORT=3000
          EOL
          
          # Créer le fichier .env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > ~/workout-planner/.env
          
          # Déployer l'application
          cd ~/workout-planner
          docker compose pull
          docker compose down
          docker compose up -d 